name: Update Kubernetes deployment
description: Update image with rolling update and auto rollback

inputs:
  project:
    required: true
    description: "Sub-project to build. pass 'root' for repository root"
  image:
    required: true
    description: "Docker image name (e.g. registry.digitalocean.com/regisrty/apps/my-app)"
  tag:
    required: true
    description: "Image tag (e.g. abc123)"
  k8s_cluster_name:
    required: true
    description: "DOKS Cluster name"
  k8s_namespace:
    required: true
    description: "Kubernetes namespace"
  k8s_deployment_name:
    required: true
    description: "Kubernetes deployment name"
  do_api_token:
    required: true
    description: "DigitalOcean API token"

runs:
  using: "composite"
  steps:
    - name: Setup K8s connection
      uses: ./workflows/.github/actions/kube-setup
      with:
        k8s_cluster_name: ${{ inputs.k8s_cluster_name }}
        do_api_token: ${{ inputs.do_api_token }}

    - name: Set current deployment for ${{ inputs.project }}
      id: meta
      shell: bash
      run: |
        if [[ "${{ inputs.project }}" == "root" ]]; then
          echo "deployment=${{ inputs.k8s_deployment_name }}" >> "$GITHUB_OUTPUT"
        else
          echo "deployment=${{ inputs.k8s_deployment_name }}-${{ inputs.project }}" >> "$GITHUB_OUTPUT"
        fi

    - name: Update Kubernetes deployment for ${{ inputs.project }}
      id: update
      shell: bash
      run: |
        kubectl set image deployment/${{ steps.meta.outputs.deployment }} \
          ${{ steps.meta.outputs.deployment }}=${{ inputs.image }}:${{ inputs.tag }} \
          --namespace=${{ inputs.namespace }}

    - name: Wait for rollout to complete for ${{ inputs.project }}
      id: rollout
      shell: bash
      continue-on-error: true
      run: |
        kubectl rollout status deployment/${{ steps.meta.outputs.deployment }} \
          --namespace=${{ inputs.namespace }} --timeout=180s

    - name: Rollback and fail pipeline if rollout failed for ${{ inputs.project }}
      if: steps.rollout.outcome == 'failure'
      shell: bash
      run: |
        echo "❌ Rollout failed. Rolling back..."
        kubectl rollout undo deployment/${{ steps.meta.outputs.deployment }} \
          --namespace=${{ inputs.namespace }}
        echo "❌ Deployment failed and rollback executed."
        exit 1

    - name: Notify success for ${{ inputs.project }}
      if: steps.rollout.outcome == 'success'
      shell: bash
      run: echo "✅ Deployment ${{ steps.meta.outputs.deployment }} succeeded."
