name: Build and Deploy to Kubernetes

on:
  workflow_call:
    inputs:
      tag: { required: true, type: string }
      registry: { required: true, type: string }
      k8s_cluster_name: { required: true, type: string }
      k8s_namespace: { required: true, type: string }
      k8s_deployment_name: { required: true, type: string }
      subprojects: { required: false, type: string }
    secrets:
      do_api_token: { required: true }

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set.outputs.matrix }}
    steps:
      - id: set
        run: |
          if [[ -z "${{ inputs.subprojects }}" || "${{ inputs.subprojects }}" == "" ]]; then
            echo 'matrix={"project":["root"]}' >> $GITHUB_OUTPUT
          else
            matrix=$(echo "${{ inputs.subprojects }}" | jq -R '{project: (split(","))}')
            echo "matrix=$matrix" >> $GITHUB_OUTPUT
          fi

  run-matrix:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: doctl
          password: ${{ secrets.do_api_token }}

      - name: Set project context and Dockerfile path
        id: meta
        shell: bash
        run: |
          DOCKERFILE=Dockerfile.production

          if [[ "${{ matrix.project }}" == "root" ]]; then
            echo "context=." >> "$GITHUB_OUTPUT"
            echo "dockerfile=${DOCKERFILE}" >> "$GITHUB_OUTPUT"

            DEPLOYMENT=${{ inputs.k8s_deployment_name }}
          else
            echo "context=${{ matrix.project }}" >> "$GITHUB_OUTPUT"
            echo "dockerfile=${{ matrix.project }}/${DOCKERFILE}" >> "$GITHUB_OUTPUT"

            DEPLOYMENT=${{ inputs.k8s_deployment_name }}-${{ matrix.project }}
          fi

          echo "image=${{ inputs.registry }}/${{ inputs.k8s_namespace }}/${DEPLOYMENT}" >> "$GITHUB_OUTPUT"
          echo "deployment=${DEPLOYMENT}" >> "$GITHUB_OUTPUT"

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.meta.outputs.context }}
          file: ${{ steps.meta.outputs.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.image }}:${{ inputs.tag }}
          cache-from: type=registry,ref=${{ steps.meta.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.meta.outputs.image }}:buildcache,mode=max

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.do_api_token }}

      - name: Fetch kubeconfig
        run: doctl kubernetes cluster kubeconfig save ${{ inputs.k8s_cluster_name }}

      - name: Update Kubernetes deployment
        id: update
        run: |
          kubectl set image deployment/${{ steps.meta.outputs.deployment }} \
            ${{ steps.meta.outputs.deployment }}=${{ steps.meta.outputs.image }}:${{ inputs.tag }} \
            --namespace=${{ inputs.k8s_namespace }}

      - name: Wait for rollout to complete
        id: rollout
        continue-on-error: true
        run: |
          kubectl rollout status deployment/${{ steps.meta.outputs.deployment }} \
            --namespace=${{ inputs.k8s_namespace }} --timeout=180s

      - name: Rollback and fail pipeline if rollout failed
        if: steps.rollout.outcome == 'failure'
        run: |
          echo "❌ Rollout failed. Rolling back..."
          kubectl rollout undo deployment/${{ steps.meta.outputs.deployment }} \
            --namespace=${{ inputs.k8s_namespace }}
          echo "❌ Deployment failed and rollback executed."
          exit 1

      - name: Notify success
        if: steps.rollout.outcome == 'success'
        run: echo "✅ Deployment ${{ steps.meta.outputs.deployment }} succeeded."
